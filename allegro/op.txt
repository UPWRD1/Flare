src/core/mod.rs:38:5] ast.clone() = [
    Operation(
`        Opsrc/core/mod.rs:38:5] ast.clone() = [
    Operation(
        OpDecl {
            name: Token {
                tokentype: TkSymbol,
                value: Identity(
                    Ident {
                        name: Some(
                            "main",
                        ),
                        kind: None,
                        value: Str(
                            "main",
                        ),
                    },
                ),
                location: 7,
            },
            params: [],
            body: BlockStmt {
                statements: [
                    Val(
                        ValDecl {
                            name: Token {
                                tokentype: TkSymbol,
                                value: Identity(
                                    Ident {
                                        name: Some(
                                            "x",
                                        ),
                                        kind: None,
                                        value: Str(
                                            "x",
                                        ),
                                    },
                                ),
                                location: 33,
                            },
                            initializer: Literal(
                                LiteralExpr {
                                    value: Token {
                                        tokentype: TkNumeric,
                                        value: Int(
                                            3,
                                        ),
                                        location: 42,
                                    },
                                },
                            ),
                        },
                    ),
                    Expression(
                        ExpressionStmt {
                            expression: Empty,
                        },
                    ),
                ],
            },
        },
    ),
]Decl {
            name: Token {
                tokentype: TkSymbol,
                value: Identity(
                    Ident {
                        name: Some(
                            "main",
                        ),
                        kind: None,
                        value: Str(
                            "main",
                        ),
                    },
          `      ),
                location: 7,
            },
            params: [],
            body: BlockStmt {
                statements: [
                    Val(
                        ValDecl {
                            name: Token {
                                tokentype: TkSymbol,
                                value: Identity(
                                    Ident {
                                        name: Some(
                                            "x",
                                        ),
                                        kind: None,
                                        value: Str(
                                            "x",
                                        ),
                                    },
                                ),
                                location: 33,
                            },
                            initializer: Literal(
                                LiteralExpr {
                                    value: Token {
                                        tokentype: TkNumeric,
                                        value: Int(
                                            3,
                                        ),
                                        location: 42,
                                    },
                                },
                            ),
                        },
                    ),
                    Expression(
                        ExpressionStmt {
                            expression: Empty,
                        },
                    ),
                ],
            },
        },
    ),
]