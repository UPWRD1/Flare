use super::{ast::SymbolValue, environment::AKind};

#[derive(Debug, Clone, PartialEq, Eq, PartialOrd, Ord)]
pub enum TokenType {
    TkKwUse,
    TkKWOp,
    TkKwLet,
    TkKwPrint,
    TkKwOf,
    TkKwIf,
    TkKwElse,
    TkKwMatch,
    TkKwWhile,
    TkKwFor,
    TkKwIn,
    TkKwTask,
    TkKwInvoke,
    TkKwReturn,
    TkKwTrue,
    TkKwFalse,
    TkSymbol,
    TkScalar,
    TkType(AKind),
    TkPlus,
    TkMinus,
    TkStar,
    TkSlash,
    TkLparen,
    TkRparen,
    TkSmallArr,
    TkBigArr,
    TkPipe,
    TkPercent,
    TkLBrace,
    TkRBrace,
    TkStatementEnd,
    TkAssign,
    TkAssignInfer,
    TkOpMuteShortHand,
    TkCEQ,
    TkCNE,
    TkCLT,
    TkCLE,
    TkCGT,
    TkCGE,
    TkAnd,
    TkOr,
    TkComma,
    TkColon,
    TkDot,
    TkEof,
}

#[derive(Clone, Debug, PartialEq)]
pub struct Token {
    pub tokentype: TokenType,
    pub value: Option<SymbolValue>,
    pub location: usize,
}
