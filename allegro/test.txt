[src/root/mod.rs:55:5] p.clone() = Program {
    modules: [
        Module {
            body: [
                Struct {
                    name: "Config",
                    members: [
                        (
                            "$_query",
                            Str,
                        ),
                        (
                            "$_file_path",
                            Str,
                        ),
                        (
                            "$_ignore_case",
                            Bool,
                        ),
                    ],
                },
                TypeDef {
                    name: Custom(
                        "Config",
                        [],
                    ),
                    funcs: [
                        FnDef {
                            name: "build",
                            rettype: Custom(
                                "Config",
                                [],
                            ),
                            args: [
                                (
                                    "args",
                                    Custom(
                                        "Vec",
                                        [
                                            Str,
                                        ],
                                    ),
                                ),
                            ],
                            limits: Some(
                                [],
                            ),
                            body: [
                                If {
                                    condition: Logical {
                                        l: MethodCall {
                                            obj: Symbol(
                                                "args",
                                            ),
                                            name: Symbol(
                                                "len",
                                            ),
                                            args: [],
                                        },
                                        op: CLT,
                                        r: Int(
                                            3,
                                        ),
                                    },
                                    then: Return {
                                        value: Call {
                                            name: Symbol(
                                                "Err",
                                            ),
                                            args: [
                                                Str(
                                                    "\"Not enough arguments!\"",
                                                ),
                                            ],
                                        },
                                    },
                                    otherwise: Assignment {
                                        name: Symbol(
                                            "q",
                                        ),
                                        value: MethodCall {
                                            obj: Symbol(
                                                "args",
                                            ),
                                            name: Symbol(
                                                "get",
                                            ),
                                            args: [
                                                Int(
                                                    1,
                                                ),
                                            ],
                                        },
                                    },
                                },
                                Assignment {
                                    name: Symbol(
                                        "f",
                                    ),
                                    value: MethodCall {
                                        obj: Symbol(
                                            "args",
                                        ),
                                        name: Symbol(
                                            "get",
                                        ),
                                        args: [
                                            Int(
                                                2,
                                            ),
                                        ],
                                    },
                                },
                                Assignment {
                                    name: Symbol(
                                        "i",
                                    ),
                                    value: MethodCall {
                                        obj: Symbol(
                                            "args",
                                        ),
                                        name: Symbol(
                                            "contains",
                                        ),
                                        args: [
                                            Str(
                                                "\"-i\"",
                                            ),
                                        ],
                                    },
                                },
                                Return {
                                    value: StructInstance {
                                        name: Symbol(
                                            "Config",
                                        ),
                                        fields: [
                                            Assignment {
                                                name: Symbol(
                                                    "query",
                                                ),
                                                value: Symbol(
                                                    "q",
                                                ),
                                            },
                                            Assignment {
                                                name: Symbol(
                                                    "file_path",
                                                ),
                                                value: Symbol(
                                                    "f",
                                                ),
                                            },
                                            Assignment {
                                                name: Symbol(
                                                    "ignore_case",
                                                ),
                                                value: Symbol(
                                                    "i",
                                                ),
                                            },
                                        ],
                                    },
                                },
                            ],
                        },
                        FnDef {
                            name: "run",
                            rettype: Custom(
                                "Result",
                                [
                                    Naught,
                                    Str,
                                ],
                            ),
                            args: [
                                (
                                    "self",
                                    Generic(
                                        "?_2c71bd48d95c9b64",
                                    ),
                                ),
                            ],
                            limits: Some(
                                [],
                            ),
                            body: [
                                Assignment {
                                    name: Symbol(
                                        "contents",
                                    ),
                                    value: Composition {
                                        l: Call {
                                            name: Symbol(
                                                "read_file",
                                            ),
                                            args: [
                                                FieldAccess(
                                                    Symbol(
                                                        "self",
                                                    ),
                                                    Symbol(
                                                        "file_path",
                                                    ),
                                                ),
                                            ],
                                        },
                                        r: Call {
                                            name: Symbol(
                                                "unwrap",
                                            ),
                                            args: [],
                                        },
                                    },
                                },
                                Assignment {
                                    name: Symbol(
                                        "res",
                                    ),
                                    value: If {
                                        condition: FieldAccess(
                                            Symbol(
                                                "self",
                                            ),
                                            Symbol(
                                                "ignore_case",
                                            ),
                                        ),
                                        then: Call {
                                            name: Symbol(
                                                "search_case_insensitive",
                                            ),
                                            args: [
                                                FieldAccess(
                                                    Symbol(
                                                        "self",
                                                    ),
                                                    Symbol(
                                                        "query",
                                                    ),
                                                ),
                                                Symbol(
                                                    "contents",
                                                ),
                                            ],
                                        },
                                        otherwise: Composition {
                                            l: Call {
                                                name: Symbol(
                                                    "search",
                                                ),
                                                args: [
                                                    FieldAccess(
                                                        Symbol(
                                                            "self",
                                                        ),
                                                        Symbol(
                                                            "query",
                                                        ),
                                                    ),
                                                    Symbol(
                                                        "contents",
                                                    ),
                                                ],
                                            },
                                            r: Call {
                                                name: Symbol(
                                                    "foreach",
                                                ),
                                                args: [
                                                    Closure {
                                                        args: [],
                                                        body: [
                                                            Call {
                                                                name: Symbol(
                                                                    "out",
                                                                ),
                                                                args: [
                                                                    Symbol(
                                                                        "line",
                                                                    ),
                                                                ],
                                                            },
                                                        ],
                                                    },
                                                ],
                                            },
                                        },
                                    },
                                },
                                Return {
                                    value: Call {
                                        name: Symbol(
                                            "Ok",
                                        ),
                                        args: [],
                                    },
                                },
                            ],
                        },
                    ],
                },
                FnDef {
                    name: "search",
                    rettype: Custom(
                        "Vec",
                        [
                            Str,
                        ],
                    ),
                    args: [
                        (
                            "query",
                            Str,
                        ),
                        (
                            "contents",
                            Str,
                        ),
                    ],
                    limits: Some(
                        [],
                    ),
                    body: [
                        Composition {
                            l: MethodCall {
                                obj: Symbol(
                                    "contents",
                                ),
                                name: Symbol(
                                    "lines",
                                ),
                                args: [],
                            },
                            r: Call {
                                name: Symbol(
                                    "filter",
                                ),
                                args: [
                                    Closure {
                                        args: [
                                            (
                                                "line",
                                                Generic(
                                                    "?_d8d3fee1a010ab96",
                                                ),
                                            ),
                                        ],
                                        body: [
                                            MethodCall {
                                                obj: Symbol(
                                                    "line",
                                                ),
                                                name: Symbol(
                                                    "contains",
                                                ),
                                                args: [
                                                    Symbol(
                                                        "query",
                                                    ),
                                                ],
                                            },
                                        ],
                                    },
                                ],
                            },
                        },
                    ],
                },
                FnDef {
                    name: "search_case_insensitive",
                    rettype: Custom(
                        "Vec",
                        [
                            Str,
                        ],
                    ),
                    args: [
                        (
                            "query",
                            Str,
                        ),
                        (
                            "contents",
                            Str,
                        ),
                    ],
                    limits: Some(
                        [],
                    ),
                    body: [
                        Assignment {
                            name: Symbol(
                                "q",
                            ),
                            value: MethodCall {
                                obj: Symbol(
                                    "query",
                                ),
                                name: Symbol(
                                    "to_lowercase",
                                ),
                                args: [],
                            },
                        },
                        Composition {
                            l: MethodCall {
                                obj: Symbol(
                                    "contents",
                                ),
                                name: Symbol(
                                    "lines",
                                ),
                                args: [],
                            },
                            r: Call {
                                name: Symbol(
                                    "filter",
                                ),
                                args: [
                                    Closure {
                                        args: [
                                            (
                                                "line",
                                                Generic(
                                                    "?_d8d3fee1a010ab96",
                                                ),
                                            ),
                                        ],
                                        body: [
                                            MethodCall {
                                                obj: Symbol(
                                                    "line",
                                                ),
                                                name: Symbol(
                                                    "to_lowercase",
                                                ),
                                                args: [],
                                            },
                                        ],
                                    },
                                ],
                            },
                        },
                    ],
                },
                FnDef {
                    name: "main",
                    rettype: Generic(
                        "?_c8c7a99bb88e156b",
                    ),
                    args: [],
                    limits: Some(
                        [],
                    ),
                    body: [
                        Assignment {
                            name: Symbol(
                                "args",
                            ),
                            value: MethodCall {
                                obj: Symbol(
                                    "Env",
                                ),
                                name: Symbol(
                                    "read_argsv",
                                ),
                                args: [],
                            },
                        },
                        Assignment {
                            name: Symbol(
                                "config",
                            ),
                            value: Composition {
                                l: MethodCall {
                                    obj: Symbol(
                                        "build",
                                    ),
                                    name: Symbol(
                                        "Config",
                                    ),
                                    args: [
                                        Symbol(
                                            "args",
                                        ),
                                    ],
                                },
                                r: Call {
                                    name: Symbol(
                                        "unwrap_else",
                                    ),
                                    args: [
                                        Closure {
                                            args: [
                                                (
                                                    "e",
                                                    Generic(
                                                        "?_e561aacbdf93cfd2",
                                                    ),
                                                ),
                                            ],
                                            body: [
                                                Call {
                                                    name: Symbol(
                                                        "quit",
                                                    ),
                                                    args: [
                                                        BinAdd {
                                                            l: Str(
                                                                "\"Problem parsing arguments: \"",
                                                            ),
                                                            r: Symbol(
                                                                "e",
                                                            ),
                                                        },
                                                        Int(
                                                            1,
                                                        ),
                                                    ],
                                                },
                                            ],
                                        },
                                    ],
                                },
                            },
                        },
                        If {
                            condition: Logical {
                                l: MethodCall {
                                    obj: Symbol(
                                        "config",
                                    ),
                                    name: Symbol(
                                        "run",
                                    ),
                                    args: [],
                                },
                                op: Is,
                                r: Call {
                                    name: Symbol(
                                        "Err",
                                    ),
                                    args: [
                                        Symbol(
                                            "e",
                                        ),
                                    ],
                                },
                            },
                            then: Call {
                                name: Symbol(
                                    "quit",
                                ),
                                args: [
                                    BinAdd {
                                        l: Str(
                                            "\"Application error: \"",
                                        ),
                                        r: Symbol(
                                            "e",
                                        ),
                                    },
                                    Int(
                                        1,
                                    ),
                                ],
                            },
                            otherwise: Call {
                                name: Symbol(
                                    "exit",
                                ),
                                args: [
                                    Int(
                                        0,
                                    ),
                                ],
                            },
                        },
                    ],
                },
            ],
        },
    ],
    dependencies: [],
}